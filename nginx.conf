user  www-data;
worker_processes  auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;

        location / {
            root /var/www/html;
            index index.html;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;
        }
    }
}

# user  www-data;
# worker_processes  auto;
# pid /run/nginx.pid;
#
# events {
#     worker_connections 1024;
# }
#
# http {
#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     keepalive_timeout 65;
#     types_hash_max_size 2048;
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;
#
#     # Settings to protect against HTTP Flood
#     limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
#
#     # Logging for fail2ban
#     log_format main '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log /var/log/nginx/access.log main;
#     error_log /var/log/nginx/error.log warn;
#
#     server {
#         listen 80 default_server;
#         listen [::]:80 default_server;
#
#         root /var/www/html;
#         index index.html;
#
#         server_name _;
#
#         location / {
#             try_files $uri $uri/ =404;
#         }
#
#         # HTTP Flood protection with a request limit per IP address
#         location /protected {
#             limit_req zone=one burst=5 nodelay;
#             try_files $uri $uri/ =404;
#         }
#
#         # Settings for fail2ban operation
#         auth_basic "Restricted";
#         auth_basic_user_file /etc/nginx/.htpasswd;
#     }
#
#     # SSL configuration
#     server {
#         listen 443 ssl default_server;
#         listen [::]:443 ssl default_server;
#
#         ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
#         ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
#
#         root /var/www/html;
#         index index.html;
#
#         server_name _;
#
#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }
# }
